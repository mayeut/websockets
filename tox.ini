[tox]
envlist = {py33,py34,py35,py36}{,-speedups},coverage,flake8,isort

[testenv]
commands =
    ; Unfortunately tox has no support for building C extensions.
    ; Do it manually in the git checkout - that's where tests run.

    ; Remove any existing compiled extension.
    find . -name '*.so' -delete

    ; Before testing with speedups, compile the extension.
    speedups: python setup.py --quiet build_ext --inplace

    python -m unittest

    ; After testing with speedups, remove the extension.
    speedups: find . -name '*.so' -delete

deps =
    py33: asyncio
whitelist_externals =
    find

[testenv:coverage]
setenv =
    CFLAGS=-O0 -coverage
    LDFLAGS=-coverage
commands =
    ; Handle speedups as above and also remove coverage data.
    find . -name '*.so' -or -name '*.gcno' -or -name '*.gcda' -or -name '*.gcov' -delete
    python setup.py --quiet build_ext --inplace

    python -m coverage erase
    python -m coverage run --branch --source=websockets -m unittest
    python -m coverage report --show-missing --fail-under=100
    gcovr -r . -s -k #'-k': keep gcov data for codecov, waiting for fail under option

    ; After testing with speedups, remove the extension.
    find . -name '*.so' -delete

deps =
    coverage
    gcovr

[testenv:flake8]
commands = flake8 websockets
deps = flake8

[testenv:isort]
commands = isort --check-only --recursive websockets
deps = isort
